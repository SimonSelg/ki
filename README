+--+
|ki|
+--+


Python package `ki` is a command-line interface for the version control and
editing of ``.anki2`` collections as git repositories of markdown files.
Rather than providing an interactive UI like the Anki desktop client, `ki` aims
to allow natural editing *in the filesystem*.

In general, the purpose of `ki` is to allow users to work on large, complex
Anki decks in exactly the same way they work on large, complex software
projects.

TODO
----
- Add implementations to test function sigs in `tests/test_ki.py`. (DONE)
- Add CLI tests that actually call the subcommands. (DONE)
- Add `shell-doctest` tests for CLI subcommands.
- Add implementations of `clone`, `pull`, and `push`. (DONE)
- Make sure `push` acquires lock on SQLite3 file before overwriting.
- Make clone work on empty directories to match `git` behavior.
- Test utilities.


Notes
-----
To debug gitpython commands:
    export GIT_PYTHON_TRACE=full


Bugs
----
    raise GitCommandError(redacted_command, status, stderr_value, stdout_value)
git.exc.GitCommandError: Cmd('git') failed due to: exit code(3)
  cmdline: git remote add origin /tmp/tmpuand3wz0/ki/remote/1625c6643169d7c6b7b8d13d654645d5/.git
  stderr: 'error: remote origin already exists.'
